# Needs definition of mako variables ${shorturl}, ${COURSE},
# ${boxsize}, ${boxname}

!bnotice Notation
In the following, the prompt `Terminal>` indicates a Unix terminal
window on Mac or a Command Prompt window on Windows.  The prompt
`Machine>` indicates a terminal window where Ubuntu is running (in a
Vagrant machine).
!enotice

__Step 1.__ Download and install "VirtualBox":
"https://www.virtualbox.org/wiki/Downloads". Choose the version
according to the operating system on the host.
For example, if you want to build or run Vagrant machines under Mac OS X, choose
*VirtualBox x.y.z for OS X hosts*, where `x.y.z` is the version number
of VirtualBox. Double click the downloaded `.dmg` file to install
VirtualBox. Those who work on a Windows machine will select *VirtualBox
x.y.z for Windows hosts*, which downloads an `.exe` file to be
double clicked to perform the installation.

__Step 2.__ Download and install "Vagrant": "http://downloads.vagrantup.com/".
Choose the latest version and the installation file corresponding to
the host's operating system (where you installed VirtualBox).  On a Mac, you
select the `Vagrant-x.y.z.dmg` file (`x.y.z` denotes the version of
the software), on Windows the `Vagrant_x.y.z.msi` file is the
relevant choice.
On Ubuntu, select `vagrant_x.y.z_*.deb` and install it
by `sudo dpkg -i vagrant_x.y.z_*.deb`.

__Step 3 for Windows users.__ If you have a Windows machine, you
must install "Cygwin": "http://cygwin.com/install.html".  Download
the Cygwin's "setup.exe": "http://cygwin.com/setup.exe" file and
follow the instructions given by the installer. Make sure you manually
select the 'X11' category during installation.  Notice that
downloading Cygwin might take one or more hours, depending on the
speed of your network.  Cygwin is not needed on Mac computers.

__Step 4.__
Start X11: run *Applications - Utilities - X11* on a Mac,
or *Start - All Programs - Cygwin-X - XWin Server* on Windows.

__Step 5.__ Move to your home directory and make a new directory
`vagrant` and a subdirectory `projects`:

!bc sys
Terminal> cd
Terminal> mkdir vagrant
Terminal> mkdir vagrant/projects
Terminal> cd vagrant
!ec
All files that you run from the Vagrant machine are supposed
to reside in `vagrant/projects` and its subdirectories.

__Step 6.__
% if COURSE == '1100':
We have two alternative Vagrant boxes for the INF1100/MAT-INF1100L
course, one small box running Ubuntu 13.04,
`${boxname}` (${boxsize} Gb)
found at URL: "${shorturl}", and one newer and much richer box running
Ubuntu 14.04, `ubuntu-14.04-amd64.box` (5 Gb)
found at URL: "http://goo.gl/nSeBCg". Download one of these
files.
% elif COURSE == '5620':
We have two alternative Vagrant boxes for the INF5620
course, one box running Ubuntu 13.04,
`${boxname}` (${boxsize} Gb)
found at URL: "${shorturl}", and one newer and richer box running
Ubuntu 14.04, `ubuntu-14.04-amd64.box` (5 Gb)
found at URL: "http://goo.gl/nSeBCg". Download one of these
files.
% else:
Download the file from  and store it as
`${boxname}` in the `vagrant` directory.  The file is *big*,
${boxsize} Gb, and may take hours to download.
% endif
Make sure you have a stable Internet connection and that you do not
bring your computer to sleep before the complete file is downloaded.


__Step 7.__ Make sure you stand in the `vagrant` directory.
Run

!bc sys
Terminal> vagrant box add ${COURSE} ${boxname}
Terminal> vagrant init ${COURSE}
Terminal> vagrant up
Terminal> vagrant ssh
!ec
You are now inside a full-blown Ubuntu system with all software you need
for the course.


__Step 8.__
Open a file `vagrant/projects/test1.py` in a *text editor* on the host system
and write the following lines in the file:

!bc pypro
import numpy as np
import matplotlib.pyplot as plt
x = np.linspace(0, 3, 11)
y = np.exp(-x)
plt.plot(x, y)
plt.show()
!ec
Save the file. Move to the terminal window with the Ubuntu (Vagrant) machine.
Run

!bc sys
Machine> cd /vagrant/projects
Machine> python test1.py
!ec
You should see a plot of $e^{-x}$ on the screen. If you encounter
any problems, read Section ref{vagrant:trouble}.
