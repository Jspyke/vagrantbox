# Mako Variables: COURSE (INF1100, INF5620, ...)
<%
if COURSE == 'INF1100':
    origurl = 'https://docs.google.com/a/simula.no/file/d/0B8qXlFGYFyhjcnFyNWxSaGo3dTg/edit?usp=sharing'
    shorturl = 'http://goo.gl/vRkxuQ'
    boxsize = '2.7'
    boxname = 'inf1100.box'
elif COURSE == 'INF5620':
    origurl = 'https://docs.google.com/a/simula.no/file/d/0B8qXlFGYFyhjcnFyNWxSaGo3dTg/edit?usp=sharing'
    shorturl = 'http://goo.gl/ta977B'
    boxsize = '3.8'
    boxname = 'inf5620.box'
elif COURSE == 'simula_summer_course':
    shorturl = 'http://goo.gl/nSeBCg'
    boxsize = '5'
    boxname = 'ubuntu-14.04-amd64.box'
    origurl = 'https://drive.google.com/folderview?id=0B5-JTGlbVBscYnBHSDR4Q2RYWE0&usp=sharing'
else:
    print 'Illegal value of COURSE:', COURSE; import sys; sys.exit(1)
%>

TITLE: Installation of a Vagrant machine
AUTHOR: Hans Petter Langtangen Email:hpl@simula.no at Center for Biomedical Computing, Simula Research Laboratory & Department of Informatics, University of Oslo
DATE: today

A Vagrant machine is a file that you can download and install on
your machine to get access to a complete Ubuntu computer
in a Mac or Windows environment. You work write programs in your
host system (Mac or Windows), but run them in a Ubuntu
environment.

In the following, the prompt `Terminal>` indicates a Unix terminal
window on Mac or a Command Prompt window on Windows.  The prompt
`Machine>` indicates a terminal window where Ubuntu is running (in a
Vagrant machine).

===== Installation instructions =====

# #include "vagrant_install.do.txt"

===== Troubleshooting: shared directory is invisible =====

It may happen that the `/vagrant` directory seems empty inside
the Vagrant machine. Two steps will fix this problem. First,
run

!bc sys
Machine> sudo /etc/init.d/vboxadd setup
!ec
inside the Vagrant machine. Second, log out and run

!bc
Terminal> sudo vagrant reload
!ec
outside the Vagrant machine.
Then do `vagrant ssh` and take an `ls /vagrant` to see that the
files in the project directory (e.g., `Vagrantfile` and the Vagrant
box) are visible.

===== Troubleshooting: "couldn't connect to display ..." =====

This error message points to the problem that X11 graphics cannot
be shown on the host. It should be sufficient to start X11 on
the host, see Step 4 above.

===== Troubleshooting: Internet is not reachable =====

A test if Internet is reachable is to run a `ping` command inside
the machine, e.g.,

!bc sys
Machine> ping us.ubuntu.archive.com
!ec
A hanging command indicates that Internet is not reachable.
Log out of the box, run `vagrant reload`, and
`vagrant ssh`. Try the `ping` command again.

===== Working with an initialized Vagrant machine =====

The daily work with the Vagrant machine is very easy. Simply go to the `vagrant`
directory where the machine resides and run

!bc sys
Terminal> vagrant up
Terminal> vagrant ssh
!ec
You are now inside the machine and can reach
files on the host from
`/vagrant/projects`.
Log out with Ctrl-D and in again with `vagrant ssh`.
Create and edit files on the host in `~/vagrant/projects` and its
subdirectories.

Before closing a laptop or shutting it down, it is recommended
to log out of the Vagrant machine and run `vagrant suspend`.

===== A typical session with writing and testing Python programs =====

Here is a worked example on creating a Python program on Windows or Mac
running it on Ubuntu.
Go to the vagrant project directory on
your Windows or Mac computer,
make a new directory `mytest`, go to this directory, and
launch a text editor, such as TextEdit on Mac or Notepad++ on Windows,
to create a Python program `test.py`.
The relevant Unix commands are

!bc sys
Terminal> cd ~/vagrant/projects
Terminal> mkdir mytest
Terminal> cd mytest
Terminal> gedit test.py&
!ec
Write the following code in `test.py`:

!bc pypro
print 'Hello!"
!ec
Save the file.

In another terminal window, go to the `vagrant` directory and
start the vagrant machine if it is not already running:

!bc sys
Terminal> cd ~/vagrant
Terminal> vagrant up
Terminal> vagrant ssh
!ec
You are now inside an Ubuntu machine in this terminal window.

Inside Ubuntu,
move to the `mytest` directory which is shared with your Mac or Windows
computer:

!bc sys
Machine> cd /vagrant/projects/mytest
!ec
Run the `test.py` program:

!bc sys
Terminal> python test.py
  File "test.py", line 1
    print 'Hello!"
                 ^
SyntaxError: EOL while scanning string literal
!ec
You need to correct the bug. Go to the text editor with the `test.py`
on your Windows or Mac computer and change the double quote to a single
quote:

!bc pycod
print 'Hello!'
!ec
Go to the terminal window where the Ubuntu machine is running and rerun
the program:

!bc sys
Machine> python test.py
Hello!
!ec
You should now understand how you edit programs on your Windows or Mac
computer and how you run the programs inside the Ubuntu
machine in a terminal window. Just remember that `/vagrant` in Ubuntu
corresponds to the directory `~/vagrant` on the Mac or Windows computer.
